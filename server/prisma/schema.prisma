// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator graphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  dateCreated     DateTime @default(now())
  dateLastUpdated DateTime @default(now())

  phone   String   @unique
  hash    String
  salt    String
  roles   Role[]
  recipes Recipe[]
}

model Role {
  id              Int      @id @default(autoincrement())
  dateCreated     DateTime @default(now())
  dateLastUpdated DateTime @default(now())

  user   User?  @relation(fields: [userId], references: [id])
  userId Int?
  name   String @unique
}

model Recipe {
  id              Int      @id @default(autoincrement())
  dateCreated     DateTime @default(now())
  dateLastUpdated DateTime @default(now())

  name        String
  description String
  user        User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  ingredients RecipeIngredient[]
}

model RecipeIngredient {
  recipe       Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId     Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  ingredientId Int

  quantity Float
  unit     Unit  @relation(fields: [unitId], references: [id], onDelete: Cascade)
  unitId   Int

  @@id([recipeId, ingredientId])
}

model Ingredient {
  id              Int      @id @default(autoincrement())
  dateCreated     DateTime @default(now())
  dateLastUpdated DateTime @default(now())

  name        String
  description String
  recipes     RecipeIngredient[]
}

model Unit {
  id              Int      @id @default(autoincrement())
  dateCreated     DateTime @default(now())
  dateLastUpdated DateTime @default(now())

  name    String
  symbol  String
  recipes RecipeIngredient[]
}
